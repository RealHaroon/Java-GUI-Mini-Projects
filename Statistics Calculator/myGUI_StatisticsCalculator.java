
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author user
 */
public class myGUI_StatisticsCalculator extends javax.swing.JFrame {

    /**
     * Creates new form myGUI_StatisticsCalculator
     */
    public myGUI_StatisticsCalculator() {
        initComponents();
    }
        public static void bubbleSorting(int[]arr){
    // performing BubbleSorting.
    for(int i=0;i<arr.length-1;i++){
        for(int j=0;j<arr.length-i-1;j++){
            if (arr[j]>arr[j+1]) {//(use < for desending order.)
                int temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
                
            }
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        tf2 = new javax.swing.JTextField();
        bSort = new javax.swing.JButton();
        bMean = new javax.swing.JButton();
        bMode = new javax.swing.JButton();
        bMedian = new javax.swing.JButton();
        bRange = new javax.swing.JButton();
        bSD = new javax.swing.JButton();
        bClear = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("By Haroon");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));

        t1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        tf2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tf2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf2ActionPerformed(evt);
            }
        });

        bSort.setBackground(new java.awt.Color(204, 204, 255));
        bSort.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bSort.setText("Sort");
        bSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSortActionPerformed(evt);
            }
        });

        bMean.setBackground(new java.awt.Color(204, 204, 255));
        bMean.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bMean.setText("Mean");
        bMean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMeanActionPerformed(evt);
            }
        });

        bMode.setBackground(new java.awt.Color(204, 204, 255));
        bMode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bMode.setText("Mode");
        bMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModeActionPerformed(evt);
            }
        });

        bMedian.setBackground(new java.awt.Color(204, 204, 255));
        bMedian.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bMedian.setText("Median");
        bMedian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMedianActionPerformed(evt);
            }
        });

        bRange.setBackground(new java.awt.Color(204, 204, 255));
        bRange.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bRange.setText("Range");
        bRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRangeActionPerformed(evt);
            }
        });

        bSD.setBackground(new java.awt.Color(204, 204, 255));
        bSD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bSD.setText("S D");
        bSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSDActionPerformed(evt);
            }
        });

        bClear.setBackground(new java.awt.Color(204, 204, 255));
        bClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bClear.setText("Clear");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Statistics Calculator");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("By: Haroon");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Input");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 51, 51));
        jLabel5.setText("Output");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t1)
                            .addComponent(tf2))
                        .addGap(60, 60, 60))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bSort)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bMean)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bMode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bMedian)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bRange)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bSD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bClear))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addContainerGap(66, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSort, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bMean, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bMode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bMedian, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bRange, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSD, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSortActionPerformed
         try{
        String input = t1.getText();

                    // Split the input string into an array of strings (assuming comma-separated values)
                    String[] strArray = input.split(",");

                    // Create an integer array to store the converted values
                    int[]intArray = new int[strArray.length];

                    // Convert each string to an integer using a loop
                    for (int i = 0; i < strArray.length; i++) {
                        intArray[i] = Integer.parseInt(strArray[i].trim());
                    }
                    bubbleSorting(intArray);
                    //Arrays.sort(intArray);
                    
                     // Convert the sorted integer array back to a string
                    StringBuilder sortedData = new StringBuilder();
                    for (int num : intArray) {
                        sortedData.append(num).append(",");
                    }

                    // Remove the trailing comma
                    if (sortedData.length() > 0) {
                        sortedData.setLength(sortedData.length() - 1);
                    }

                    // Set the sorted string back to the text field
                    tf2.setText(sortedData.toString());
        }catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(null, "Please enter valid comma-separated numbers!");
                
        }
    }//GEN-LAST:event_bSortActionPerformed

    private void bMeanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMeanActionPerformed
        String input = t1.getText();

                    // Split the input string into an array of strings (assuming comma-separated values)
                    String[] strArray = input.split(",");

                    // Create an integer array to store the converted values
                    int[]intArray = new int[strArray.length];

                    // Convert each string to an integer using a loop
                    for (int i = 0; i < strArray.length; i++) {
                        intArray[i] = Integer.parseInt(strArray[i].trim());
                    }
   
                     int total=0;
                     double n=intArray.length;
                     
       
        for(int i=0;i<intArray.length;i++) {
            total += intArray[i];
            
       
        }
        double avarage=total/n;
      //  String averageString = String.valueOf(avarage);
      DecimalFormat df = new DecimalFormat("#.##"); // Change "#.##" to your desired format
        String averageString = df.format(avarage);
        tf2.setText(averageString);
    }//GEN-LAST:event_bMeanActionPerformed

    private void bModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModeActionPerformed
  String input = t1.getText();

                    // Split the input string into an array of strings (assuming comma-separated values)
                    String[] strArray = input.split(",");

                    // Create an integer array to store the converted values
                    int[]intArray = new int[strArray.length];

                    // Convert each string to an integer using a loop
                    for (int i = 0; i < strArray.length; i++) {
                        intArray[i] = Integer.parseInt(strArray[i].trim());
                    }
                      int mode = 0;
        int maxFrequency = 0;
        
        for (int i = 0; i < intArray.length; i++) {
            int frequency = 1;
            for (int j = i + 1; j < intArray.length; j++) {
                if (intArray[i] == intArray[j]) {
                    frequency++;
                }
            }
            if (frequency > maxFrequency) {
                maxFrequency = frequency;
                mode = intArray[i];
            }
        }
        String stringMode=String.valueOf(mode);
        tf2.setText(stringMode);      
    }//GEN-LAST:event_bModeActionPerformed

    private void bRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRangeActionPerformed
       String input = t1.getText();

                    // Split the input string into an array of strings (assuming comma-separated values)
                    String[] strArray = input.split(",");

                    // Create an integer array to store the converted values
                    int[]intArray = new int[strArray.length];

                    // Convert each string to an integer using a loop
                    for (int i = 0; i < strArray.length; i++) {
                        intArray[i] = Integer.parseInt(strArray[i].trim());
                    }
                    
                     int min = intArray[0];
                     int max = intArray[0];

    // Find the actual min and max values
                for (int i = 1; i < intArray.length; i++) {
                 if (intArray[i] < min) {
                      min = intArray[i];
                    }
                    if (intArray[i] > max) {
                       max = intArray[i];
                 }
                    }
                    int range=max-min;
                    String stringRange=String.valueOf(range);
                    tf2.setText(stringRange);
    }//GEN-LAST:event_bRangeActionPerformed

    private void bMedianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMedianActionPerformed
         String input = t1.getText();

                    // Split the input string into an array of strings (assuming comma-separated values)
                    String[] strArray = input.split(",");

                    // Create an integer array to store the converted values
                    int[]intArray = new int[strArray.length];

                    // Convert each string to an integer using a loop
                    for (int i = 0; i < strArray.length; i++) {
                        intArray[i] = Integer.parseInt(strArray[i].trim());
                    }
                    bubbleSorting(intArray);
                 
                    
                    double median;

             // Calculate the median
                  if (intArray.length % 2 == 0) {
        // Even number of elements, average the two middle values
                  median = (intArray[intArray.length / 2 - 1] + intArray[intArray.length / 2]) / 2.0;
             }   else {
        // Odd number of elements, take the middle value
                   median = intArray[intArray.length / 2];
             }

         // Convert the median to string and set it to the text field
            // String midString = String.valueOf(median);
             DecimalFormat df = new DecimalFormat("#.##"); // Change "#.##" to your desired format
        String midString = df.format(median);
             tf2.setText(midString);
    }//GEN-LAST:event_bMedianActionPerformed

    private void bSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSDActionPerformed
         String input = t1.getText();

                    // Split the input string into an array of strings (assuming comma-separated values)
                    String[] strArray = input.split(",");

                    // Create an integer array to store the converted values
                    int[]intArray = new int[strArray.length];

                    // Convert each string to an integer using a loop
                    for (int i = 0; i < strArray.length; i++) {
                        intArray[i] = Integer.parseInt(strArray[i].trim());
                    }
                    // total for sum and n is the population.
                     int total=0;
                     double n=intArray.length;
                     
       // Sum of All dataSet
        for(int i=0;i<intArray.length;i++) {
            total += intArray[i];
            
       
        }
        // Calculating mean
        double mean=total/n;
        // Sum of Squared Deviations.
       double sumOfSquaredDeviations = 0;
    
        for (int i = 0; i < intArray.length; i++) {
            // Storing x-mean into deviation
        double deviation = intArray[i] - mean;
        // sum of (x-mean)^2
        sumOfSquaredDeviations += deviation * deviation;
            }
      
      // calculating variance   
         double variance=sumOfSquaredDeviations/n;
         // calculating SquareRoot of variance
        double sdSqrt=Math.sqrt(variance);
         
     //    String strVariance=String.valueOf(sdSqrt)
        DecimalFormat df = new DecimalFormat("#.##"); // Change "#.##" to your desired format
        String strVariance = df.format(sdSqrt);
         tf2.setText(strVariance);
    }//GEN-LAST:event_bSDActionPerformed

    private void tf2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf2ActionPerformed

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        t1.setText(" ");
        tf2.setText(" ");
    }//GEN-LAST:event_bClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(myGUI_StatisticsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(myGUI_StatisticsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(myGUI_StatisticsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(myGUI_StatisticsCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new myGUI_StatisticsCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClear;
    private javax.swing.JButton bMean;
    private javax.swing.JButton bMedian;
    private javax.swing.JButton bMode;
    private javax.swing.JButton bRange;
    private javax.swing.JButton bSD;
    private javax.swing.JButton bSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField tf2;
    // End of variables declaration//GEN-END:variables
}
